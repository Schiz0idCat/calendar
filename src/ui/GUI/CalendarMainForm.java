/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/Application.java to edit this template
 */
package ui.GUI;
import java.awt.event.ActionEvent;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Felipe MÃ¡rquez, Nicolas Leiva
 */
public class CalendarMainForm extends javax.swing.JFrame {

    /**
     * Creates new form CalendarMainForm
     */
    public CalendarMainForm() {
        initComponents();
        initializeSharedData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        calendarPanel1 = new ui.GUI.CalendarPanel();
        peoplePanel1 = new ui.GUI.PeoplePanel();
        peoplePanel2 = new ui.GUI.PeoplePanel();
        weatherPanel1 = new ui.GUI.WeatherPanel();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setName("mainTabbedPane"); // NOI18N
        jTabbedPane1.addTab("Calendar", calendarPanel1);

        peoplePanel1.setLayout(new java.awt.BorderLayout());
        peoplePanel1.add(peoplePanel2, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("People", peoplePanel1);
        
        jTabbedPane1.addTab("Weather", weatherPanel1);

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");

        openMenuItem.setMnemonic('o');
        openMenuItem.setText("Open");
        openMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(openMenuItem);

        saveMenuItem.setMnemonic('s');
        saveMenuItem.setText("Save");
        saveMenuItem.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    if (calendarPanel1 != null) {
                        calendarPanel1.saveCalendar();
                    }
                    if (peoplePanel2 != null) {
                        peoplePanel2.savePeople();
                    }
                    if (weatherPanel1 != null) {
                        weatherPanel1.saveWeather();
                    }
                    javax.swing.JOptionPane.showMessageDialog(CalendarMainForm.this, "Datos guardados correctamente.");
                } catch (Exception e) {
                    javax.swing.JOptionPane.showMessageDialog(CalendarMainForm.this, "Error al intentar guardar: " + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
                }
            }
        });
        fileMenu.add(saveMenuItem);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");
        jMenuItem1.setText("Help");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    if (java.awt.Desktop.isDesktopSupported()) {
                        java.awt.Desktop.getDesktop().browse(new java.net.URI(
                            "https://github.com/schiz0idcat/calendar"));
                    } 
                    else {
                        javax.swing.JOptionPane.showMessageDialog(
                            CalendarMainForm.this,
                            "Unable to open browser on this platform.");
                    }
                }catch (Exception e) {
                    javax.swing.JOptionPane.showMessageDialog(
                        CalendarMainForm.this,
                        "Error opening link: " + e.getMessage(),
                        "Error",
                        javax.swing.JOptionPane.ERROR_MESSAGE);
                }
            }
        });
        helpMenu.add(jMenuItem1);
        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private modules.calendar.Calendar sharedCalendar;
    private modules.people.People sharedPeople;
    private modules.weather.Weather sharedWeather;
    private disk.modules.CSVCalendar sharedCsvCalendar;
    private disk.modules.CSVPeople sharedCsvPeople;
    private disk.modules.CSVWeather sharedCsvWeather;

    /**
     * Create and wire shared data instances so both panels
     * see updates immediately.
     */
    private void initializeSharedData() {
        try {
            sharedCsvPeople = new disk.modules.CSVPeople("calendar");
            sharedPeople = sharedCsvPeople.load();

            sharedCsvCalendar = new disk.modules.CSVCalendar("calendar", sharedPeople);
            sharedCalendar = sharedCsvCalendar.load();
            
            sharedCsvWeather = new disk.modules.CSVWeather("calendar");
            sharedWeather = sharedCsvWeather.load();

            // Inject shared instances
            calendarPanel1.setData(sharedCalendar, sharedPeople, sharedCsvCalendar, sharedCsvPeople);
            peoplePanel2.setData(sharedPeople, sharedCsvPeople);
            weatherPanel1.setData(sharedWeather, sharedCsvWeather);
        }
        catch (Exception e) {
            // If anything fails, panels will use their own loaders
        }
    }

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed
    private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {                                             
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Open Weather CSV File");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("CSV Files (*.csv)", "csv");
        fileChooser.setFileFilter(filter);

        int userSelection = fileChooser.showOpenDialog(this);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToOpen = fileChooser.getSelectedFile();
            try {
                // For now, we only handle weather files.
                System.out.println("Loading data from: " + fileToOpen.getAbsolutePath());
                
                // Use the new method in CSVWeather (to be added in Step 2)
                modules.weather.Weather newWeatherData = sharedCsvWeather.loadFromFile(fileToOpen);
                
                // Update the main application's shared data
                this.sharedWeather = newWeatherData;
                
                // Pass the updated data to the panel to refresh the table
                weatherPanel1.setData(this.sharedWeather, this.sharedCsvWeather);
                
                javax.swing.JOptionPane.showMessageDialog(this, 
                    "Weather file imported successfully.", 
                    "Import Successful", 
                    javax.swing.JOptionPane.INFORMATION_MESSAGE);

            } catch (Exception e) {
                javax.swing.JOptionPane.showMessageDialog(this, 
                    "Error importing file: " + e.getMessage(), 
                    "Import Error", 
                    javax.swing.JOptionPane.ERROR_MESSAGE);
                e.printStackTrace(); // Useful for debugging
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void run() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CalendarMainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CalendarMainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CalendarMainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CalendarMainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run(){
                new CalendarMainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private ui.GUI.CalendarPanel calendarPanel1;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem openMenuItem;
    private ui.GUI.PeoplePanel peoplePanel1;
    private ui.GUI.PeoplePanel peoplePanel2;
    private javax.swing.JMenuItem saveMenuItem;
    private ui.GUI.WeatherPanel weatherPanel1;
    // End of variables declaration//GEN-END:variables

}

